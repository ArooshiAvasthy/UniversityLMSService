//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceClient.CourseServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="CourseType", Namespace="http://schemas.datacontract.org/2004/07/UniversityService")]
    [System.SerializableAttribute()]
    public partial class CourseType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int CourseIDField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CourseNameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string DescriptionField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePathField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string StreamField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int CourseID {
            get {
                return this.CourseIDField;
            }
            set {
                if ((this.CourseIDField.Equals(value) != true)) {
                    this.CourseIDField = value;
                    this.RaisePropertyChanged("CourseID");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string CourseName {
            get {
                return this.CourseNameField;
            }
            set {
                if ((object.ReferenceEquals(this.CourseNameField, value) != true)) {
                    this.CourseNameField = value;
                    this.RaisePropertyChanged("CourseName");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Description {
            get {
                return this.DescriptionField;
            }
            set {
                if ((object.ReferenceEquals(this.DescriptionField, value) != true)) {
                    this.DescriptionField = value;
                    this.RaisePropertyChanged("Description");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath {
            get {
                return this.ImagePathField;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePathField, value) != true)) {
                    this.ImagePathField = value;
                    this.RaisePropertyChanged("ImagePath");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Stream {
            get {
                return this.StreamField;
            }
            set {
                if ((object.ReferenceEquals(this.StreamField, value) != true)) {
                    this.StreamField = value;
                    this.RaisePropertyChanged("Stream");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="FileType", Namespace="http://schemas.datacontract.org/2004/07/UniversityService")]
    [System.SerializableAttribute()]
    public partial class FileType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string CoursesField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int IdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string NameField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TypeField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private byte[] dataField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Courses {
            get {
                return this.CoursesField;
            }
            set {
                if ((object.ReferenceEquals(this.CoursesField, value) != true)) {
                    this.CoursesField = value;
                    this.RaisePropertyChanged("Courses");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int Id {
            get {
                return this.IdField;
            }
            set {
                if ((this.IdField.Equals(value) != true)) {
                    this.IdField = value;
                    this.RaisePropertyChanged("Id");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Name {
            get {
                return this.NameField;
            }
            set {
                if ((object.ReferenceEquals(this.NameField, value) != true)) {
                    this.NameField = value;
                    this.RaisePropertyChanged("Name");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Type {
            get {
                return this.TypeField;
            }
            set {
                if ((object.ReferenceEquals(this.TypeField, value) != true)) {
                    this.TypeField = value;
                    this.RaisePropertyChanged("Type");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public byte[] data {
            get {
                return this.dataField;
            }
            set {
                if ((object.ReferenceEquals(this.dataField, value) != true)) {
                    this.dataField = value;
                    this.RaisePropertyChanged("data");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="CourseServiceReference.ICourseService")]
    public interface ICourseService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetDisplayAllCourses", ReplyAction="http://tempuri.org/ICourseService/GetDisplayAllCoursesResponse")]
        ServiceClient.CourseServiceReference.CourseType[] GetDisplayAllCourses();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetDisplayAllCourses", ReplyAction="http://tempuri.org/ICourseService/GetDisplayAllCoursesResponse")]
        System.Threading.Tasks.Task<ServiceClient.CourseServiceReference.CourseType[]> GetDisplayAllCoursesAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/PostEnrolledUser", ReplyAction="http://tempuri.org/ICourseService/PostEnrolledUserResponse")]
        bool PostEnrolledUser(string username, string course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/PostEnrolledUser", ReplyAction="http://tempuri.org/ICourseService/PostEnrolledUserResponse")]
        System.Threading.Tasks.Task<bool> PostEnrolledUserAsync(string username, string course);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseFiles", ReplyAction="http://tempuri.org/ICourseService/GetCourseFilesResponse")]
        ServiceClient.CourseServiceReference.FileType[] GetCourseFiles(string courseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetCourseFiles", ReplyAction="http://tempuri.org/ICourseService/GetCourseFilesResponse")]
        System.Threading.Tasks.Task<ServiceClient.CourseServiceReference.FileType[]> GetCourseFilesAsync(string courseName);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetSpecificFile", ReplyAction="http://tempuri.org/ICourseService/GetSpecificFileResponse")]
        ServiceClient.CourseServiceReference.FileType GetSpecificFile(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/GetSpecificFile", ReplyAction="http://tempuri.org/ICourseService/GetSpecificFileResponse")]
        System.Threading.Tasks.Task<ServiceClient.CourseServiceReference.FileType> GetSpecificFileAsync(int id);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/PostFile", ReplyAction="http://tempuri.org/ICourseService/PostFileResponse")]
        void PostFile(ServiceClient.CourseServiceReference.FileType fileObj);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/ICourseService/PostFile", ReplyAction="http://tempuri.org/ICourseService/PostFileResponse")]
        System.Threading.Tasks.Task PostFileAsync(ServiceClient.CourseServiceReference.FileType fileObj);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface ICourseServiceChannel : ServiceClient.CourseServiceReference.ICourseService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class CourseServiceClient : System.ServiceModel.ClientBase<ServiceClient.CourseServiceReference.ICourseService>, ServiceClient.CourseServiceReference.ICourseService {
        
        public CourseServiceClient() {
        }
        
        public CourseServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public CourseServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public CourseServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceClient.CourseServiceReference.CourseType[] GetDisplayAllCourses() {
            return base.Channel.GetDisplayAllCourses();
        }
        
        public System.Threading.Tasks.Task<ServiceClient.CourseServiceReference.CourseType[]> GetDisplayAllCoursesAsync() {
            return base.Channel.GetDisplayAllCoursesAsync();
        }
        
        public bool PostEnrolledUser(string username, string course) {
            return base.Channel.PostEnrolledUser(username, course);
        }
        
        public System.Threading.Tasks.Task<bool> PostEnrolledUserAsync(string username, string course) {
            return base.Channel.PostEnrolledUserAsync(username, course);
        }
        
        public ServiceClient.CourseServiceReference.FileType[] GetCourseFiles(string courseName) {
            return base.Channel.GetCourseFiles(courseName);
        }
        
        public System.Threading.Tasks.Task<ServiceClient.CourseServiceReference.FileType[]> GetCourseFilesAsync(string courseName) {
            return base.Channel.GetCourseFilesAsync(courseName);
        }
        
        public ServiceClient.CourseServiceReference.FileType GetSpecificFile(int id) {
            return base.Channel.GetSpecificFile(id);
        }
        
        public System.Threading.Tasks.Task<ServiceClient.CourseServiceReference.FileType> GetSpecificFileAsync(int id) {
            return base.Channel.GetSpecificFileAsync(id);
        }
        
        public void PostFile(ServiceClient.CourseServiceReference.FileType fileObj) {
            base.Channel.PostFile(fileObj);
        }
        
        public System.Threading.Tasks.Task PostFileAsync(ServiceClient.CourseServiceReference.FileType fileObj) {
            return base.Channel.PostFileAsync(fileObj);
        }
    }
}
