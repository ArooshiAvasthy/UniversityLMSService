//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.18444
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace ServiceClient.BlogServiceReference {
    using System.Runtime.Serialization;
    using System;
    
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.Runtime.Serialization", "4.0.0.0")]
    [System.Runtime.Serialization.DataContractAttribute(Name="BlogType", Namespace="http://schemas.datacontract.org/2004/07/UniversityService")]
    [System.SerializableAttribute()]
    public partial class BlogType : object, System.Runtime.Serialization.IExtensibleDataObject, System.ComponentModel.INotifyPropertyChanged {
        
        [System.NonSerializedAttribute()]
        private System.Runtime.Serialization.ExtensionDataObject extensionDataField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string AuthorField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private int BlogIdField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string BodyField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string ImagePath2Field;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string IntroWordsField;
        
        [System.Runtime.Serialization.OptionalFieldAttribute()]
        private string TitleField;
        
        [global::System.ComponentModel.BrowsableAttribute(false)]
        public System.Runtime.Serialization.ExtensionDataObject ExtensionData {
            get {
                return this.extensionDataField;
            }
            set {
                this.extensionDataField = value;
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Author {
            get {
                return this.AuthorField;
            }
            set {
                if ((object.ReferenceEquals(this.AuthorField, value) != true)) {
                    this.AuthorField = value;
                    this.RaisePropertyChanged("Author");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public int BlogId {
            get {
                return this.BlogIdField;
            }
            set {
                if ((this.BlogIdField.Equals(value) != true)) {
                    this.BlogIdField = value;
                    this.RaisePropertyChanged("BlogId");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Body {
            get {
                return this.BodyField;
            }
            set {
                if ((object.ReferenceEquals(this.BodyField, value) != true)) {
                    this.BodyField = value;
                    this.RaisePropertyChanged("Body");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string ImagePath2 {
            get {
                return this.ImagePath2Field;
            }
            set {
                if ((object.ReferenceEquals(this.ImagePath2Field, value) != true)) {
                    this.ImagePath2Field = value;
                    this.RaisePropertyChanged("ImagePath2");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string IntroWords {
            get {
                return this.IntroWordsField;
            }
            set {
                if ((object.ReferenceEquals(this.IntroWordsField, value) != true)) {
                    this.IntroWordsField = value;
                    this.RaisePropertyChanged("IntroWords");
                }
            }
        }
        
        [System.Runtime.Serialization.DataMemberAttribute()]
        public string Title {
            get {
                return this.TitleField;
            }
            set {
                if ((object.ReferenceEquals(this.TitleField, value) != true)) {
                    this.TitleField = value;
                    this.RaisePropertyChanged("Title");
                }
            }
        }
        
        public event System.ComponentModel.PropertyChangedEventHandler PropertyChanged;
        
        protected void RaisePropertyChanged(string propertyName) {
            System.ComponentModel.PropertyChangedEventHandler propertyChanged = this.PropertyChanged;
            if ((propertyChanged != null)) {
                propertyChanged(this, new System.ComponentModel.PropertyChangedEventArgs(propertyName));
            }
        }
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    [System.ServiceModel.ServiceContractAttribute(ConfigurationName="BlogServiceReference.IBlogService")]
    public interface IBlogService {
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlog", ReplyAction="http://tempuri.org/IBlogService/GetBlogResponse")]
        ServiceClient.BlogServiceReference.BlogType[] GetBlog();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlog", ReplyAction="http://tempuri.org/IBlogService/GetBlogResponse")]
        System.Threading.Tasks.Task<ServiceClient.BlogServiceReference.BlogType[]> GetBlogAsync();
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/PostBlog", ReplyAction="http://tempuri.org/IBlogService/PostBlogResponse")]
        bool PostBlog(ServiceClient.BlogServiceReference.BlogType blogData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/PostBlog", ReplyAction="http://tempuri.org/IBlogService/PostBlogResponse")]
        System.Threading.Tasks.Task<bool> PostBlogAsync(ServiceClient.BlogServiceReference.BlogType blogData);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogDetails", ReplyAction="http://tempuri.org/IBlogService/GetBlogDetailsResponse")]
        ServiceClient.BlogServiceReference.BlogType GetBlogDetails(string title);
        
        [System.ServiceModel.OperationContractAttribute(Action="http://tempuri.org/IBlogService/GetBlogDetails", ReplyAction="http://tempuri.org/IBlogService/GetBlogDetailsResponse")]
        System.Threading.Tasks.Task<ServiceClient.BlogServiceReference.BlogType> GetBlogDetailsAsync(string title);
    }
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public interface IBlogServiceChannel : ServiceClient.BlogServiceReference.IBlogService, System.ServiceModel.IClientChannel {
    }
    
    [System.Diagnostics.DebuggerStepThroughAttribute()]
    [System.CodeDom.Compiler.GeneratedCodeAttribute("System.ServiceModel", "4.0.0.0")]
    public partial class BlogServiceClient : System.ServiceModel.ClientBase<ServiceClient.BlogServiceReference.IBlogService>, ServiceClient.BlogServiceReference.IBlogService {
        
        public BlogServiceClient() {
        }
        
        public BlogServiceClient(string endpointConfigurationName) : 
                base(endpointConfigurationName) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, string remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(string endpointConfigurationName, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(endpointConfigurationName, remoteAddress) {
        }
        
        public BlogServiceClient(System.ServiceModel.Channels.Binding binding, System.ServiceModel.EndpointAddress remoteAddress) : 
                base(binding, remoteAddress) {
        }
        
        public ServiceClient.BlogServiceReference.BlogType[] GetBlog() {
            return base.Channel.GetBlog();
        }
        
        public System.Threading.Tasks.Task<ServiceClient.BlogServiceReference.BlogType[]> GetBlogAsync() {
            return base.Channel.GetBlogAsync();
        }
        
        public bool PostBlog(ServiceClient.BlogServiceReference.BlogType blogData) {
            return base.Channel.PostBlog(blogData);
        }
        
        public System.Threading.Tasks.Task<bool> PostBlogAsync(ServiceClient.BlogServiceReference.BlogType blogData) {
            return base.Channel.PostBlogAsync(blogData);
        }
        
        public ServiceClient.BlogServiceReference.BlogType GetBlogDetails(string title) {
            return base.Channel.GetBlogDetails(title);
        }
        
        public System.Threading.Tasks.Task<ServiceClient.BlogServiceReference.BlogType> GetBlogDetailsAsync(string title) {
            return base.Channel.GetBlogDetailsAsync(title);
        }
    }
}
